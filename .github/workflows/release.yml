# Multi-Java Docker 自动发版工作流
name: Release and Publish

on:
  push:
    branches: [ "main", "master" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: wittf/multi-java

jobs:
  # 语义化版本发布
  semantic-release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      issues: write
      pull-requests: write
      
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}
      new_release_major_version: ${{ steps.semantic.outputs.new_release_major_version }}
      new_release_minor_version: ${{ steps.semantic.outputs.new_release_minor_version }}
      new_release_patch_version: ${{ steps.semantic.outputs.new_release_patch_version }}
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 安装依赖
        run: npm ci

      - name: 运行语义化发布
        id: semantic
        uses: cycjimmy/semantic-release-action@v4
        with:
          semantic_version: 22
          extra_plugins: |
            @semantic-release/changelog@6.0.3
            @semantic-release/git@10.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: github-actions[bot]
          GIT_AUTHOR_EMAIL: github-actions[bot]@users.noreply.github.com
          GIT_COMMITTER_NAME: github-actions[bot]
          GIT_COMMITTER_EMAIL: github-actions[bot]@users.noreply.github.com

  # 构建和发布Docker镜像
  build-and-publish:
    needs: semantic-release
    if: needs.semantic-release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 安装 cosign
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: 'v2.2.4'

      - name: 设置 Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: 登录 Container Registry
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 提取 Docker 元数据
        id: meta
        uses: docker/metadata-action@v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},value=${{ needs.semantic-release.outputs.new_release_version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ needs.semantic-release.outputs.new_release_version }}
            type=semver,pattern={{major}},value=${{ needs.semantic-release.outputs.new_release_version }}
            type=raw,value=latest
          labels: |
            org.opencontainers.image.title=Multi-Java
            org.opencontainers.image.description=多版本Java Docker镜像，支持Java 8/11/17/21/24
            org.opencontainers.image.version=${{ needs.semantic-release.outputs.new_release_version }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created={{date 'YYYY-MM-DDTHH:mm:ssZ'}}

      - name: 构建和推送 Docker 镜像
        id: build-and-push
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 签名 Docker 镜像
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
  # Docker Hub发布
  publish-dockerhub:
    needs: [semantic-release, build-and-publish]
    if: needs.semantic-release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: 登录 Docker Hub
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 构建和推送到 Docker Hub
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            wittf/multi-java:latest
            wittf/multi-java:${{ needs.semantic-release.outputs.new_release_version }}
            wittf/multi-java:v${{ needs.semantic-release.outputs.new_release_major_version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # 测试新发布的镜像
  test-release:
    needs: [semantic-release, build-and-publish]
    if: needs.semantic-release.outputs.new_release_published == 'true'
    runs-on: ubuntu-latest
    
    steps:
      - name: 测试镜像功能
        run: |
          # 测试GHCR镜像
          echo "🧪 测试新发布的镜像..."
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.semantic-release.outputs.new_release_version }} java-list
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.semantic-release.outputs.new_release_version }} java21 -version | head -1
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.semantic-release.outputs.new_release_version }} java8 -version | head -1
          echo "✅ 镜像测试通过！"

